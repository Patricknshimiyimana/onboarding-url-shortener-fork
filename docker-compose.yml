services:
  url-shortener-app:
    image: url-shortener-app
    build: .
    restart: always
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      SERVER_PORT: ${SERVER_PORT}
      POSTGRES_DB_URL: ${POSTGRES_URL}
      POSTGRES_DB_USERNAME: ${POSTGRES_USER}
      POSTGRES_DB_PASSWORD: ${POSTGRES_PASSWORD}
      OPENAPI_DEV_URL: ${ALLOWED_ORIGIN}
      ALLOWED_ORIGIN: ${ALLOWED_ORIGIN}

  url-shortener-app2:
    image: url-shortener-app2
    build: .
    restart: always
    ports:
      - "${SERVER2_PORT}:${SERVER2_PORT}"
    environment:
      SERVER_PORT: ${SERVER2_PORT}
      POSTGRES_DB_URL: ${POSTGRES_URL}
      POSTGRES_DB_USERNAME: ${POSTGRES_USER}
      POSTGRES_DB_PASSWORD: ${POSTGRES_PASSWORD}
      OPENAPI_DEV_URL: ${ALLOWED_ORIGIN}
      ALLOWED_ORIGIN: ${ALLOWED_ORIGIN}
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: ${SPRING_REDIS_PORT}

  db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    ports:
      - "${NGINX_HOST_PORT}:${NGINX_CONTAINER_PORT}"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - url-shortener-app
      - url-shortener-app2

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "${SPRING_REDIS_PORT}:${SPRING_REDIS_PORT}"

volumes:
  postgres_data:
